import { useState } from 'react';
import VideoDropZone from './components/VideoDropZone';
import PromptInput from './components/PromptInput';
import GuideViewer from './components/GuideViewer';
import { uploadVideo, uploadToGemini, analyzeVideo } from './services/api';

function App() {
  const [uploadedFile, setUploadedFile] = useState(null);
  const [geminiUri, setGeminiUri] = useState(null);
  const [prompt, setPrompt] = useState('');
  const [guide, setGuide] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const handleVideoDrop = async (file) => {
    try {
      setLoading(true);
      setError(null);

      // 1. Upload to our server
      console.log('üîµ [App] Uploading video to our server');
      const uploadResponse = await uploadVideo(file);
      setUploadedFile(uploadResponse.file);

      // 2. Upload to Gemini
      console.log('üîµ [App] Starting Gemini upload process');
      const geminiResponse = await uploadToGemini(
        uploadResponse.file.filename,
        file.type
      );
      console.log('üîµ [App] Gemini upload completed, URI received:', geminiResponse.uri);
      setGeminiUri(geminiResponse.uri);
    } catch (err) {
      setError('Erreur lors du t√©l√©chargement de la vid√©o');
      console.error('üî¥ [App] Upload error:', err);
    } finally {
      setLoading(false);
    }
  };

  const handleAnalyze = async () => {
    if (!geminiUri || !prompt) {
      setError('Veuillez t√©l√©charger une vid√©o et entrer un prompt');
      return;
    }

    try {
      setLoading(true);
      setError(null);

      const formattingInstructions = `
R√¥le de l'IA : Vous √™tes un assistant expert sp√©cialis√© dans la cr√©ation d'instructions de travail (IW) d√©taill√©es et structur√©es, bas√©es sur l'analyse de contenu vid√©o. Votre objectif est de transformer des d√©monstrations visuelles en guides textuels clairs, pr√©cis et exploitables, en int√©grant des r√©f√©rences temporelles pour des aides visuelles (GIFs).

Format de Sortie Requis : Le document de sortie DOIT strictement adh√©rer au format suivant, en utilisant la langue fran√ßaise :

**INSTRUCTION DE TRAVAIL : IW-[TH√àME_VID√âO]-001**

**Titre : [Titre Descriptif de l'Instruction Bas√© sur le Contenu de la Vid√©o]**

**Version :** 1.0
**Date d'√©mission :** [Date Actuelle, ex: YYYY-MM-JJ]
**Auteur :** [Votre Nom/D√©partement - utiliser ce placeholder]
**Approuv√© par :** [Nom de l'Approbateur - utiliser ce placeholder]

---

**1.0 OBJET**
[D√©crivez l'objectif principal de la t√¢che d√©montr√©e dans la vid√©o, en un paragraphe concis. Qu'est-ce que l'utilisateur apprendra ou accomplira en suivant cette IW ?]

**2.0 CHAMP D'APPLICATION**
[D√©limitez la port√©e de cette instruction. Quels sont les sujets sp√©cifiques couverts par la vid√©o ? Quelles sont les limites (ce qui n'est PAS couvert si pertinent) ?]

**3.0 MAT√âRIEL N√âCESSAIRE**
[Listez tous les outils, √©quipements, composants ou mat√©riaux explicitement montr√©s ou mentionn√©s comme n√©cessaires pour effectuer la t√¢che. Si un √©l√©ment est essentiel mais non nomm√©, d√©crivez-le fonctionnellement.]

**4.0 PR√âCAUTIONS DE S√âCURIT√â**
[Identifiez et listez toutes les pr√©cautions de s√©curit√© explicites ou implicites d√©montr√©es/mentionn√©es dans la vid√©o. Si aucune n'est explicite mais qu'il existe des risques √©vidents li√©s √† la t√¢che, listez les pr√©cautions de bon sens (ex: 'ATTENTION: Toujours v√©rifier la stabilit√©', 'Ne jamais laisser sans surveillance'). Utilisez des puces et des titres en gras si n√©cessaire.]

**5.0 PROC√âDURE**
[D√©composez la t√¢che principale en sections logiques et num√©rot√©es (ex: '5.1 Pr√©paration', '5.2 Ex√©cution de la T√¢che X', '5.3 Finalisation').]
[Pour chaque section, listez les √©tapes individuelles de mani√®re s√©quentielle et claire. Chaque √©tape doit √™tre une action sp√©cifique et mesurable.]
[√Ä la fin de chaque √©tape ou d'un ensemble d'√©tapes qui peuvent √™tre visuellement illustr√©es par un court segment vid√©o, ins√©rez un marqueur GIF. Le format du marqueur GIF DOIT √äTRE EXACTEMENT : '[GIF: MM:SS - MM:SS]'. Les timestamps doivent correspondre aux segments vid√©o les plus repr√©sentatifs de l'action ou de l'√©tat d√©crit. Les segments doivent √™tre concis, typiquement entre 2 et 10 secondes. Ne mettez aucune description √† l'int√©rieur des crochets du GIF.]

    Exemple de structure de proc√©dure :
    **5.1 Pr√©paration de l'environnement**
    1.  D√©gager l'espace de travail de tout obstacle.
    [GIF: 00:10 - 00:15]
    2.  Rassembler tous les outils n√©cessaires.
    [GIF: 00:17 - 00:20]

    **5.2 Ex√©cution de l'√©tape principale**
    1.  Effectuer l'action A comme d√©montr√©.
    [GIF: 00:25 - 00:30]
    2.  Appliquer la force selon l'indication.
    [GIF: 00:32 - 00:35]
    3.  Observer le r√©sultat B.
    [GIF: 00:37 - 00:40]

**6.0 CONTR√îLE QUALIT√â**
[D√©crivez les points de v√©rification ou les crit√®res de r√©ussite pour s'assurer que la t√¢che a √©t√© ex√©cut√©e correctement. Ces points peuvent √™tre d√©duits de la vid√©o (ex: 'v√©rifier que le composant est stable', 'assurer l'absence de fuite').]'

**7.0 REMARQUES ET CONSEILS**
[Ajoutez toute information suppl√©mentaire utile qui n'entre pas directement dans la proc√©dure mais qui am√©liore la compr√©hension ou l'efficacit√© (ex: astuces, erreurs courantes √† √©viter, entretien, contexte additionnel). Ces √©l√©ments peuvent √™tre extraits de commentaires oraux dans la vid√©o ou d√©duits comme bonnes pratiques.]

---

Directives d'Analyse Vid√©o et de G√©n√©ration :

1.  Analyse Initiale :
    *   Regardez la vid√©o dans son int√©gralit√© pour comprendre la t√¢che globale, son objectif et les grandes √©tapes.
    *   Identifiez le th√®me principal et la port√©e de la vid√©o pour le titre et le champ d'application.

2.  Extraction des Informations :
    *   Mat√©riel N√©cessaire : Notez tout ce qui est utilis√© ou affich√© comme pr√©alable √† l'ex√©cution de la t√¢che.
    *   Pr√©cautions de S√©curit√© : √âcoutez attentivement les avertissements et observez les actions de s√©curit√©. Si la vid√©o est une d√©monstration purement technique sans mention de s√©curit√©, mais que la t√¢che pr√©sente des risques inh√©rents (ex: outils tranchants, √©lectricit√©, poids lourd), d√©duisez et listez des pr√©cautions de bon sens.
    *   Proc√©dure :
        *   D√©coupez la vid√©o en phases ou sous-t√¢ches logiques. Cr√©ez des titres de sous-sections pour chaque phase.
        *   Pour chaque sous-section, listez les actions sp√©cifiques, ordonn√©es chronologiquement. Chaque action doit √™tre claire et concise.
        *   Pour chaque action ou groupe d'actions visuellement distinct, identifiez le segment vid√©o le plus repr√©sentatif. Notez le timestamp de d√©but et de fin pr√©cis en format MM:SS. Visez la concision du GIF tout en capturant l'action compl√®te.
    *   Contr√¥le Qualit√© : Identifiez les moments o√π la vid√©o montre ou mentionne la v√©rification de la r√©ussite d'une √©tape ou de la t√¢che finale. Si ce n'est pas explicite, sugg√©rez des contr√¥les logiques.
    *   Remarques et Conseils : Notez toutes les astuces, conseils ou informations suppl√©mentaires fournies par le narrateur ou d√©montr√©es implicitement.

3.  R√©daction :
    *   R√©digez chaque section en respectant le format et le ton professionnel des instructions de travail.
    *   Utilisez des verbes d'action √† l'imp√©ratif pour les √©tapes de la proc√©dure.
    *   Assurez la coh√©rence terminologique tout au long du document.
    *   Crucial pour les GIFs : Assurez-vous que les timestamps sont exacts et que le format '[GIF: MM:SS - MM:SS]' est respect√© SANS AUCUNE DESCRIPTION √† l'int√©rieur des crochets.

Test de Coh√©rence : Une fois l'IW g√©n√©r√©e, relisez-la pour vous assurer que chaque √©tape est logique, que les GIFs sont pertinents pour l'action qu'ils suivent, et que le document est complet et clair pour un utilisateur qui n'aurait que l'IW et les GIFs √† disposition.`;

      const fullPrompt = (prompt.concat(formattingInstructions)).replace(/\n/g, ' ');

      console.log('üîµ [App] Starting Gemini analysis');
      const response = await analyzeVideo(geminiUri, fullPrompt);
      console.log('üîµ [App] Analysis completed, response:', response);

      // V√©rifier la structure de la r√©ponse
      if (response.success) {
        const result = response.result.gemini_response.replace(/\`\`\`/g, '');
        setGuide(result);
      } else if (response.success && response.result) {
        setGuide(JSON.stringify(response.result));
      } else {
        console.error('üî¥ [App] Unexpected response structure:', response);
        setError('Format de r√©ponse inattendu du serveur');
      }
    } catch (err) {
      setError('Erreur lors de l\'analyse de la vid√©o');
      console.error('üî¥ [App] Analysis error:', err);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-100">
      <div className="container mx-auto px-4 py-8">
        <h1 className="text-3xl font-bold text-center mb-8 text-gray-800">
          Convertisseur Vid√©o vers Guide d'Instructions
        </h1>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Section Upload */}
          <div className="space-y-6">
            <PromptInput
              value={prompt}
              onChange={setPrompt}
              disabled={loading}
            />

            <VideoDropZone
              onDrop={handleVideoDrop}
              uploadedFile={uploadedFile}
              disabled={loading}
            />

            {error && (
              <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
                {error}
              </div>
            )}

            <button
              onClick={handleAnalyze}
              disabled={!geminiUri || !prompt || loading}
              className="w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-semibold hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors"
            >
              {loading ? 'Analyse en cours...' : 'Analyser et G√©n√©rer le Guide'}
            </button>
          </div>

          {/* Section Visualisation */}
          <div>
            <GuideViewer guide={guide} loading={loading} videoFilename={uploadedFile?.filename} />
          </div>
        </div>
      </div>
    </div>
  );
}

export default App;
